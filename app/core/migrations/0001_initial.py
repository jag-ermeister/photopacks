# Generated by Django 4.2.8 on 2023-12-30 19:29

import core.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "cognito_id",
                    models.CharField(blank=True, max_length=128, unique=True),
                ),
                ("email", models.TextField(blank=True, max_length=20)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("modified_date", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", core.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "display_id",
                    models.CharField(editable=False, max_length=40, unique=True),
                ),
                (
                    "subject_name",
                    models.CharField(blank=True, max_length=240, null=True),
                ),
                (
                    "model_type",
                    models.CharField(
                        choices=[
                            ("man", "MAN"),
                            ("woman", "WOMAN"),
                            ("dog", "DOG"),
                            ("cat", "CAT"),
                        ],
                        default="man",
                        max_length=20,
                    ),
                ),
                (
                    "speed_type",
                    models.IntegerField(
                        choices=[
                            (100, "test (100)"),
                            (4160, "fast (4160)"),
                            (6240, "moderate (6240)"),
                            (8320, "slow (8320)"),
                        ],
                        default=4160,
                    ),
                ),
                (
                    "fulfillment_service",
                    models.CharField(
                        choices=[("runpod", "RUNPOD"), ("batch", "BATCH")],
                        default="runpod",
                        max_length=20,
                    ),
                ),
                ("images_per_prompt", models.IntegerField(default=5)),
                ("is_processing", models.BooleanField(default=False)),
                ("is_success", models.BooleanField(null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("training_image_urls", models.JSONField(blank=True, null=True)),
                ("cropped_image_urls", models.JSONField(blank=True, null=True)),
                ("inference_image_urls", models.JSONField(blank=True, null=True)),
                ("zip_file_url", models.URLField(blank=True, null=True)),
                ("runpod_webhook_time", models.DateTimeField(blank=True, null=True)),
                ("prompts", models.JSONField(blank=True, null=True)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("modified_date", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="PromptPack",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("internal_name", models.CharField(max_length=240, unique=True)),
                ("display_name", models.CharField(default="", max_length=240)),
                ("preview_image", models.CharField(default="", max_length=240)),
                (
                    "pack_type",
                    models.CharField(
                        choices=[
                            ("Man", "MAN"),
                            ("Woman", "WOMAN"),
                            ("Dog", "DOG"),
                            ("Cat", "CAT"),
                        ],
                        default="Man",
                        max_length=20,
                    ),
                ),
                ("prompts", models.JSONField()),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("modified_date", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="OrderSequence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.order",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="order",
            name="prompt_pack_1",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="orders_prompt_pack_1",
                to="core.promptpack",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="prompt_pack_2",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="orders_prompt_pack_2",
                to="core.promptpack",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="prompt_pack_3",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="orders_prompt_pack_3",
                to="core.promptpack",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="prompt_pack_4",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="orders_prompt_pack_4",
                to="core.promptpack",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="prompt_pack_5",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="orders_prompt_pack_5",
                to="core.promptpack",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="sequence",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sequence",
                to="core.ordersequence",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
    ]
